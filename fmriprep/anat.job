#!/bin/bash
#
#SBATCH -J p50_anat
#SBATCH --time=48:00:00
#SBATCH -n 1
#SBATCH --cpus-per-task=16
#SBATCH --mem-per-cpu=4G
#SBATCH -p normal,leanew1  # Queue names you can submit to
# Outputs ----------------------------------
#SBATCH -o logs/p50_anat.%N.%j.out
#SBATCH -e logs/p50_anat.%N.%j.err
#SBATCH --mail-user=ramirezc@stanford.edu
#SBATCH --mail-type=ALL
# ------------------------------------------

# logs folder must exist

BIDS_DIR="$STUDY/data"
DERIVS_DIR="derivatives/fmriprep-20.2.1"
LOCAL_FREESURFER_DIR="$STUDY/data/derivatives/freesurfer-6.0.1" # what if it doesn't exist? --> error

containers_home="${SCRATCH}/poldrack_containers"
fmriprep_container="fmriprep-20.2.1.simg"

# Prepare some writeable bind-mount points.
TEMPLATEFLOW_HOST_HOME=$HOME/.cache/templateflow
FMRIPREP_HOST_CACHE=$HOME/.cache/fmriprep
mkdir -p ${TEMPLATEFLOW_HOST_HOME}
mkdir -p ${FMRIPREP_HOST_CACHE}

# Prepare derivatives folder
mkdir -p ${BIDS_DIR}/${DERIVS_DIR}
mkdir -p ${LOCAL_FREESURFER_DIR}

# Make sure FS_LICENSE is defined in the container.
export SINGULARITYENV_FS_LICENSE=$HOME/fs_license/license.txt

# Designate a templateflow bind-mount point
export SINGULARITYENV_TEMPLATEFLOW_HOME="/templateflow"
SINGULARITY_CMD="singularity run --cleanenv \
-B $BIDS_DIR:/data \
-B ${TEMPLATEFLOW_HOST_HOME}:${SINGULARITYENV_TEMPLATEFLOW_HOME} \
-B $SCRATCH/tmp2:/work \
-B ${LOCAL_FREESURFER_DIR}:/fsdir \
${containers_home}/${fmriprep_container}"

opts="-w /work/ \
--anat-only \
-vvv \
--omp-nthreads 8 \
--nthreads 12 \
--mem_mb 30000 \
--output-spaces MNI152NLin2009cAsym:res-2 T1w fsnative \
--use-aroma \
--fs-subjects-dir /fsdir \
--use-aroma \
--cifti-output \
--skip_bids_validation \
--resource-monitor \
--notrack"

# Parse the participants.tsv file and extract one subject ID from the line corresponding to this SLURM task.
subject=$( sed -n -E "$((${SLURM_ARRAY_TASK_ID} + 1))s/sub-(\S*)\>.*/\1/gp" ${BIDS_DIR}/participants.tsv )
echo $subject

# Remove IsRunning files from FreeSurfer
find ${LOCAL_FREESURFER_DIR}/sub-$subject/ -name "*IsRunning*" -type f -delete

# Compose the command line
cmd="${SINGULARITY_CMD} /data /data/${DERIVS_DIR} participant --participant-label ${subject} ${opts}"

# Setup done, run the command
echo Running task ${SLURM_ARRAY_TASK_ID}
echo Commandline: $cmd
eval $cmd
exitcode=$?

# Output results to a table
echo "sub-$subject   ${SLURM_ARRAY_TASK_ID}    $exitcode" \
      >> logs/${SLURM_JOB_NAME}.${SLURM_ARRAY_JOB_ID}.tsv
echo Finished tasks ${SLURM_ARRAY_TASK_ID} with exit code $exitcode
exit $exitcode

